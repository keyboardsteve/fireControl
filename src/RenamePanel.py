#!/usr/bin/env python
# -*- coding: CP1252 -*-
#
# generated by wxGlade 0.7.2 on Sat Feb 04 15:28:50 2017
#

import wx


import gettext
import string

class RenamePanel(wx.PopupWindow):
    def __init__(self, parent):
        wx.PopupWindow.__init__(self, parent=parent)
  
        self.panel_1 = wx.Panel(self, wx.ID_ANY)
        self.channel = wx.StaticText(self.panel_1, wx.ID_ANY, _("Channel:"))
        self.channelNumber = wx.StaticText(self.panel_1, wx.ID_ANY, _("1"))
        self.oldLabel = wx.StaticText(self.panel_1, wx.ID_ANY, _("Old Label:"))
        self.oldLabelText = wx.StaticText(self.panel_1, wx.ID_ANY, _("1"))
        self.input = wx.TextCtrl(self.panel_1, wx.ID_ANY, "", style=wx.TE_MULTILINE)
        
        self.lowercase = True
        self.keyboardButtons = []
        self.digitButtons = []
        
        for character in string.ascii_lowercase:
            self.keyboardButtons.append(wx.Button(self.panel_1, wx.ID_ANY, _(character)))
        
        for character in string.digits:
            self.digitButtons.append(wx.Button(self.panel_1, wx.ID_ANY, _(character)))
                                     
        self.button_Shift = wx.Button(self.panel_1, wx.ID_ANY, _("Shift"))
        self.button_space = wx.Button(self.panel_1, wx.ID_ANY, _("Space"))
        self.button_bksp = wx.Button(self.panel_1, wx.ID_ANY, _("<"))                     
        
        self.button_OK = wx.Button(self, wx.ID_ANY, _("OK"))
        self.button_Cancel = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()
        
        for key in self.keyboardButtons:
            self.Bind(wx.EVT_BUTTON, self.OnButton_Key, key)
        for key in self.digitButtons:
            self.Bind(wx.EVT_BUTTON, self.OnButton_Key, key)
            
        self.Bind(wx.EVT_BUTTON, self.OnButton_Key, self.button_space)
        self.Bind(wx.EVT_BUTTON, self.OnButton_Key, self.button_bksp)
        
        self.Bind(wx.EVT_BUTTON, self.OnButton_Shift, self.button_Shift)
        self.Bind(wx.EVT_BUTTON, self.OnButton_OK, self.button_OK)
        self.Bind(wx.EVT_BUTTON, self.OnButton_Cancel, self.button_Cancel)

    def __set_properties(self):
        self.focus = self.input

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.StaticBoxSizer(wx.StaticBox(self.panel_1, wx.ID_ANY, _("Rename Button")), wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(5, 8, 2, 2)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3.Add(self.channel, 1, 0, 0)
        sizer_3.Add(self.channelNumber, 1, 0, 0)
        sizer_3.Add(self.oldLabel, 1, 0, 0)
        sizer_3.Add(self.oldLabelText, 1, 0, 0)
        sizer_2.Add(sizer_3, 1, 0, 0)
        sizer_2.Add(self.input, 1, wx.ALIGN_CENTER | wx.EXPAND, 0)
        
        for button in self.keyboardButtons:
            grid_sizer_1.Add(button, 1, wx.EXPAND, 0)
        for button in self.digitButtons:
            grid_sizer_1.Add(button, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_Shift, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_space, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.button_bksp, 1, wx.EXPAND, 0)
        
        sizer_2.Add(grid_sizer_1, 4, 0, 0)
        self.panel_1.SetSizer(sizer_2)
        sizer_1.Add(self.panel_1, 1, 0, 0)
        sizer_4.Add(self.button_OK, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_4.Add(self.button_Cancel, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_1.Add(sizer_4, 1, 0, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()

    def OnButton_OK(self,event):
        if self.input.GetValue().strip() == '':
            wx.MessageBox('Blank Labels are not allowed', 'Error', wx.OK | wx.ICON_ERROR)
        else:
            event.Skip()

    def OnButton_Cancel(self, event):
        self.input.Clear()
        self.Hide()
        
    def OnButton_Key(self, event):
        e = event.GetEventObject()
        
        if e.GetId() == self.button_space.GetId():
            self.input.AppendText(' ')
        elif e.GetId() == self.button_bksp.GetId():
            self.input.SetValue(self.input.GetValue()[:-1])
        else:
            self.input.AppendText(e.GetLabel())
        
    def OnButton_Shift(self, event):
        if self.lowercase:
            for i, key in enumerate(self.keyboardButtons):
                key.SetLabel(string.ascii_uppercase[i])
            self.lowercase = False
        else:
            for i, key in enumerate(self.keyboardButtons):
                key.SetLabel(string.ascii_lowercase[i])
            self.lowercase = True
        
    
